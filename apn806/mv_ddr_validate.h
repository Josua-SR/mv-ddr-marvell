/* Copyright (c) 2017 Marvell.
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef _MV_DDR_VALIDATE_H
#define _MV_DDR_VALIDATE_H

enum search_element {
	CRX,
	CTX,
	REC_CAL
};

enum mask_type {
	OR_MASK,
	AND_MASK
};

enum mask_def {
	PER_IF,
	PER_BYTE_RES1,
	PER_BYTE_RES0,
	PER_DQ0
};

enum search_type {
	VERTICAL,
	HORIZONTAL,
	DIAGONAL
};

enum validation_test {
	XOR_CS0_GENERAL_1M,
	XOR_CS0_GENERAL_MULTI_ACCESS,
	XOR_CS0_GENERAL_FULL_ADDR_ACCESS,
	CPU_CS0_GENERAL_1M,
	TIP2MC_EQUATION,
	EYE_SWEEP_ALL_CS,
	EYE_SWEEP_TX_CS0,
	EYE_SWEEP_RX_CS0,
	EYE_SWEEP_RX_CS0_PERBIT,
	EYE_SWEEP_RX_CS0_WO_PBS,
	XOR_CS0_PARTIAL_WR,
	XOR_CS1_FULL_ADDR_ACCESS,
	XOR_CROSS_CS_FULL_ADDR_ACCESS,
	XOR_CS0_GENERAL_1M_AVS_SWEEP,
	CPU_RESET,
	XOR_CS1_PARTIAL_WR,
	XOR_IN_PAGE,
	XOR_PAGE_TO_PAGE,
	XOR_IN_BANK,
	FUNCTIONAL_WL,
	VALIDATION_FULL
};

enum validation_pattern {
	ALL_AGRESSIVE,
	ALL_AGRESSIVE_INV,
	RESONANCE,
	MOVE_ONE_ZERO,
	MOVE_ZERO_ONE,
	VALIDATION_PATTERN_LAST
};

enum cs_test {
	CS0_TO_CS0,
	CS0_TO_CS1,
	CS0_TO_CS2,
	CS0_TO_CS3,
	CS1_TO_CS0,
	CS1_TO_CS1,
	CS1_TO_CS2,
	CS1_TO_CS3,
	CS2_TO_CS0,
	CS2_TO_CS1,
	CS2_TO_CS2,
	CS2_TO_CS3,
	CS3_TO_CS0,
	CS3_TO_CS1,
	CS3_TO_CS2,
	CS3_TO_CS3
};

int mv_ddr_validate(void);

#endif /* _MV_DDR_VALIDATE_H */
